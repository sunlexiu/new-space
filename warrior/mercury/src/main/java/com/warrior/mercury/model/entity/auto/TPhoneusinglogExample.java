package com.warrior.mercury.model.entity.auto;

import java.util.ArrayList;
import java.util.List;

public class TPhoneusinglogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    public TPhoneusinglogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPhoneUsingLogIDIsNull() {
            addCriterion("PhoneUsingLogID is null");
            return (Criteria) this;
        }

        public Criteria andPhoneUsingLogIDIsNotNull() {
            addCriterion("PhoneUsingLogID is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneUsingLogIDEqualTo(Integer value) {
            addCriterion("PhoneUsingLogID =", value, "phoneUsingLogID");
            return (Criteria) this;
        }

        public Criteria andPhoneUsingLogIDNotEqualTo(Integer value) {
            addCriterion("PhoneUsingLogID <>", value, "phoneUsingLogID");
            return (Criteria) this;
        }

        public Criteria andPhoneUsingLogIDGreaterThan(Integer value) {
            addCriterion("PhoneUsingLogID >", value, "phoneUsingLogID");
            return (Criteria) this;
        }

        public Criteria andPhoneUsingLogIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("PhoneUsingLogID >=", value, "phoneUsingLogID");
            return (Criteria) this;
        }

        public Criteria andPhoneUsingLogIDLessThan(Integer value) {
            addCriterion("PhoneUsingLogID <", value, "phoneUsingLogID");
            return (Criteria) this;
        }

        public Criteria andPhoneUsingLogIDLessThanOrEqualTo(Integer value) {
            addCriterion("PhoneUsingLogID <=", value, "phoneUsingLogID");
            return (Criteria) this;
        }

        public Criteria andPhoneUsingLogIDIn(List<Integer> values) {
            addCriterion("PhoneUsingLogID in", values, "phoneUsingLogID");
            return (Criteria) this;
        }

        public Criteria andPhoneUsingLogIDNotIn(List<Integer> values) {
            addCriterion("PhoneUsingLogID not in", values, "phoneUsingLogID");
            return (Criteria) this;
        }

        public Criteria andPhoneUsingLogIDBetween(Integer value1, Integer value2) {
            addCriterion("PhoneUsingLogID between", value1, value2, "phoneUsingLogID");
            return (Criteria) this;
        }

        public Criteria andPhoneUsingLogIDNotBetween(Integer value1, Integer value2) {
            addCriterion("PhoneUsingLogID not between", value1, value2, "phoneUsingLogID");
            return (Criteria) this;
        }

        public Criteria andPhoneIDIsNull() {
            addCriterion("PhoneID is null");
            return (Criteria) this;
        }

        public Criteria andPhoneIDIsNotNull() {
            addCriterion("PhoneID is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneIDEqualTo(Integer value) {
            addCriterion("PhoneID =", value, "phoneID");
            return (Criteria) this;
        }

        public Criteria andPhoneIDNotEqualTo(Integer value) {
            addCriterion("PhoneID <>", value, "phoneID");
            return (Criteria) this;
        }

        public Criteria andPhoneIDGreaterThan(Integer value) {
            addCriterion("PhoneID >", value, "phoneID");
            return (Criteria) this;
        }

        public Criteria andPhoneIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("PhoneID >=", value, "phoneID");
            return (Criteria) this;
        }

        public Criteria andPhoneIDLessThan(Integer value) {
            addCriterion("PhoneID <", value, "phoneID");
            return (Criteria) this;
        }

        public Criteria andPhoneIDLessThanOrEqualTo(Integer value) {
            addCriterion("PhoneID <=", value, "phoneID");
            return (Criteria) this;
        }

        public Criteria andPhoneIDIn(List<Integer> values) {
            addCriterion("PhoneID in", values, "phoneID");
            return (Criteria) this;
        }

        public Criteria andPhoneIDNotIn(List<Integer> values) {
            addCriterion("PhoneID not in", values, "phoneID");
            return (Criteria) this;
        }

        public Criteria andPhoneIDBetween(Integer value1, Integer value2) {
            addCriterion("PhoneID between", value1, value2, "phoneID");
            return (Criteria) this;
        }

        public Criteria andPhoneIDNotBetween(Integer value1, Integer value2) {
            addCriterion("PhoneID not between", value1, value2, "phoneID");
            return (Criteria) this;
        }

        public Criteria andLockScreenPasswordIsNull() {
            addCriterion("LockScreenPassword is null");
            return (Criteria) this;
        }

        public Criteria andLockScreenPasswordIsNotNull() {
            addCriterion("LockScreenPassword is not null");
            return (Criteria) this;
        }

        public Criteria andLockScreenPasswordEqualTo(String value) {
            addCriterion("LockScreenPassword =", value, "lockScreenPassword");
            return (Criteria) this;
        }

        public Criteria andLockScreenPasswordNotEqualTo(String value) {
            addCriterion("LockScreenPassword <>", value, "lockScreenPassword");
            return (Criteria) this;
        }

        public Criteria andLockScreenPasswordGreaterThan(String value) {
            addCriterion("LockScreenPassword >", value, "lockScreenPassword");
            return (Criteria) this;
        }

        public Criteria andLockScreenPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("LockScreenPassword >=", value, "lockScreenPassword");
            return (Criteria) this;
        }

        public Criteria andLockScreenPasswordLessThan(String value) {
            addCriterion("LockScreenPassword <", value, "lockScreenPassword");
            return (Criteria) this;
        }

        public Criteria andLockScreenPasswordLessThanOrEqualTo(String value) {
            addCriterion("LockScreenPassword <=", value, "lockScreenPassword");
            return (Criteria) this;
        }

        public Criteria andLockScreenPasswordLike(String value) {
            addCriterion("LockScreenPassword like", value, "lockScreenPassword");
            return (Criteria) this;
        }

        public Criteria andLockScreenPasswordNotLike(String value) {
            addCriterion("LockScreenPassword not like", value, "lockScreenPassword");
            return (Criteria) this;
        }

        public Criteria andLockScreenPasswordIn(List<String> values) {
            addCriterion("LockScreenPassword in", values, "lockScreenPassword");
            return (Criteria) this;
        }

        public Criteria andLockScreenPasswordNotIn(List<String> values) {
            addCriterion("LockScreenPassword not in", values, "lockScreenPassword");
            return (Criteria) this;
        }

        public Criteria andLockScreenPasswordBetween(String value1, String value2) {
            addCriterion("LockScreenPassword between", value1, value2, "lockScreenPassword");
            return (Criteria) this;
        }

        public Criteria andLockScreenPasswordNotBetween(String value1, String value2) {
            addCriterion("LockScreenPassword not between", value1, value2, "lockScreenPassword");
            return (Criteria) this;
        }

        public Criteria andPhoneStateIDIsNull() {
            addCriterion("PhoneStateID is null");
            return (Criteria) this;
        }

        public Criteria andPhoneStateIDIsNotNull() {
            addCriterion("PhoneStateID is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneStateIDEqualTo(Integer value) {
            addCriterion("PhoneStateID =", value, "phoneStateID");
            return (Criteria) this;
        }

        public Criteria andPhoneStateIDNotEqualTo(Integer value) {
            addCriterion("PhoneStateID <>", value, "phoneStateID");
            return (Criteria) this;
        }

        public Criteria andPhoneStateIDGreaterThan(Integer value) {
            addCriterion("PhoneStateID >", value, "phoneStateID");
            return (Criteria) this;
        }

        public Criteria andPhoneStateIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("PhoneStateID >=", value, "phoneStateID");
            return (Criteria) this;
        }

        public Criteria andPhoneStateIDLessThan(Integer value) {
            addCriterion("PhoneStateID <", value, "phoneStateID");
            return (Criteria) this;
        }

        public Criteria andPhoneStateIDLessThanOrEqualTo(Integer value) {
            addCriterion("PhoneStateID <=", value, "phoneStateID");
            return (Criteria) this;
        }

        public Criteria andPhoneStateIDIn(List<Integer> values) {
            addCriterion("PhoneStateID in", values, "phoneStateID");
            return (Criteria) this;
        }

        public Criteria andPhoneStateIDNotIn(List<Integer> values) {
            addCriterion("PhoneStateID not in", values, "phoneStateID");
            return (Criteria) this;
        }

        public Criteria andPhoneStateIDBetween(Integer value1, Integer value2) {
            addCriterion("PhoneStateID between", value1, value2, "phoneStateID");
            return (Criteria) this;
        }

        public Criteria andPhoneStateIDNotBetween(Integer value1, Integer value2) {
            addCriterion("PhoneStateID not between", value1, value2, "phoneStateID");
            return (Criteria) this;
        }

        public Criteria andPhoneUserPersonIDIsNull() {
            addCriterion("PhoneUserPersonID is null");
            return (Criteria) this;
        }

        public Criteria andPhoneUserPersonIDIsNotNull() {
            addCriterion("PhoneUserPersonID is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneUserPersonIDEqualTo(Integer value) {
            addCriterion("PhoneUserPersonID =", value, "phoneUserPersonID");
            return (Criteria) this;
        }

        public Criteria andPhoneUserPersonIDNotEqualTo(Integer value) {
            addCriterion("PhoneUserPersonID <>", value, "phoneUserPersonID");
            return (Criteria) this;
        }

        public Criteria andPhoneUserPersonIDGreaterThan(Integer value) {
            addCriterion("PhoneUserPersonID >", value, "phoneUserPersonID");
            return (Criteria) this;
        }

        public Criteria andPhoneUserPersonIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("PhoneUserPersonID >=", value, "phoneUserPersonID");
            return (Criteria) this;
        }

        public Criteria andPhoneUserPersonIDLessThan(Integer value) {
            addCriterion("PhoneUserPersonID <", value, "phoneUserPersonID");
            return (Criteria) this;
        }

        public Criteria andPhoneUserPersonIDLessThanOrEqualTo(Integer value) {
            addCriterion("PhoneUserPersonID <=", value, "phoneUserPersonID");
            return (Criteria) this;
        }

        public Criteria andPhoneUserPersonIDIn(List<Integer> values) {
            addCriterion("PhoneUserPersonID in", values, "phoneUserPersonID");
            return (Criteria) this;
        }

        public Criteria andPhoneUserPersonIDNotIn(List<Integer> values) {
            addCriterion("PhoneUserPersonID not in", values, "phoneUserPersonID");
            return (Criteria) this;
        }

        public Criteria andPhoneUserPersonIDBetween(Integer value1, Integer value2) {
            addCriterion("PhoneUserPersonID between", value1, value2, "phoneUserPersonID");
            return (Criteria) this;
        }

        public Criteria andPhoneUserPersonIDNotBetween(Integer value1, Integer value2) {
            addCriterion("PhoneUserPersonID not between", value1, value2, "phoneUserPersonID");
            return (Criteria) this;
        }

        public Criteria andStartedDateTimeIsNull() {
            addCriterion("StartedDateTime is null");
            return (Criteria) this;
        }

        public Criteria andStartedDateTimeIsNotNull() {
            addCriterion("StartedDateTime is not null");
            return (Criteria) this;
        }

        public Criteria andStartedDateTimeEqualTo(String value) {
            addCriterion("StartedDateTime =", value, "startedDateTime");
            return (Criteria) this;
        }

        public Criteria andStartedDateTimeNotEqualTo(String value) {
            addCriterion("StartedDateTime <>", value, "startedDateTime");
            return (Criteria) this;
        }

        public Criteria andStartedDateTimeGreaterThan(String value) {
            addCriterion("StartedDateTime >", value, "startedDateTime");
            return (Criteria) this;
        }

        public Criteria andStartedDateTimeGreaterThanOrEqualTo(String value) {
            addCriterion("StartedDateTime >=", value, "startedDateTime");
            return (Criteria) this;
        }

        public Criteria andStartedDateTimeLessThan(String value) {
            addCriterion("StartedDateTime <", value, "startedDateTime");
            return (Criteria) this;
        }

        public Criteria andStartedDateTimeLessThanOrEqualTo(String value) {
            addCriterion("StartedDateTime <=", value, "startedDateTime");
            return (Criteria) this;
        }

        public Criteria andStartedDateTimeLike(String value) {
            addCriterion("StartedDateTime like", value, "startedDateTime");
            return (Criteria) this;
        }

        public Criteria andStartedDateTimeNotLike(String value) {
            addCriterion("StartedDateTime not like", value, "startedDateTime");
            return (Criteria) this;
        }

        public Criteria andStartedDateTimeIn(List<String> values) {
            addCriterion("StartedDateTime in", values, "startedDateTime");
            return (Criteria) this;
        }

        public Criteria andStartedDateTimeNotIn(List<String> values) {
            addCriterion("StartedDateTime not in", values, "startedDateTime");
            return (Criteria) this;
        }

        public Criteria andStartedDateTimeBetween(String value1, String value2) {
            addCriterion("StartedDateTime between", value1, value2, "startedDateTime");
            return (Criteria) this;
        }

        public Criteria andStartedDateTimeNotBetween(String value1, String value2) {
            addCriterion("StartedDateTime not between", value1, value2, "startedDateTime");
            return (Criteria) this;
        }

        public Criteria andEndedDateTimeIsNull() {
            addCriterion("EndedDateTime is null");
            return (Criteria) this;
        }

        public Criteria andEndedDateTimeIsNotNull() {
            addCriterion("EndedDateTime is not null");
            return (Criteria) this;
        }

        public Criteria andEndedDateTimeEqualTo(String value) {
            addCriterion("EndedDateTime =", value, "endedDateTime");
            return (Criteria) this;
        }

        public Criteria andEndedDateTimeNotEqualTo(String value) {
            addCriterion("EndedDateTime <>", value, "endedDateTime");
            return (Criteria) this;
        }

        public Criteria andEndedDateTimeGreaterThan(String value) {
            addCriterion("EndedDateTime >", value, "endedDateTime");
            return (Criteria) this;
        }

        public Criteria andEndedDateTimeGreaterThanOrEqualTo(String value) {
            addCriterion("EndedDateTime >=", value, "endedDateTime");
            return (Criteria) this;
        }

        public Criteria andEndedDateTimeLessThan(String value) {
            addCriterion("EndedDateTime <", value, "endedDateTime");
            return (Criteria) this;
        }

        public Criteria andEndedDateTimeLessThanOrEqualTo(String value) {
            addCriterion("EndedDateTime <=", value, "endedDateTime");
            return (Criteria) this;
        }

        public Criteria andEndedDateTimeLike(String value) {
            addCriterion("EndedDateTime like", value, "endedDateTime");
            return (Criteria) this;
        }

        public Criteria andEndedDateTimeNotLike(String value) {
            addCriterion("EndedDateTime not like", value, "endedDateTime");
            return (Criteria) this;
        }

        public Criteria andEndedDateTimeIn(List<String> values) {
            addCriterion("EndedDateTime in", values, "endedDateTime");
            return (Criteria) this;
        }

        public Criteria andEndedDateTimeNotIn(List<String> values) {
            addCriterion("EndedDateTime not in", values, "endedDateTime");
            return (Criteria) this;
        }

        public Criteria andEndedDateTimeBetween(String value1, String value2) {
            addCriterion("EndedDateTime between", value1, value2, "endedDateTime");
            return (Criteria) this;
        }

        public Criteria andEndedDateTimeNotBetween(String value1, String value2) {
            addCriterion("EndedDateTime not between", value1, value2, "endedDateTime");
            return (Criteria) this;
        }

        public Criteria andCreatedDateTimeIsNull() {
            addCriterion("CreatedDateTime is null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateTimeIsNotNull() {
            addCriterion("CreatedDateTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateTimeEqualTo(String value) {
            addCriterion("CreatedDateTime =", value, "createdDateTime");
            return (Criteria) this;
        }

        public Criteria andCreatedDateTimeNotEqualTo(String value) {
            addCriterion("CreatedDateTime <>", value, "createdDateTime");
            return (Criteria) this;
        }

        public Criteria andCreatedDateTimeGreaterThan(String value) {
            addCriterion("CreatedDateTime >", value, "createdDateTime");
            return (Criteria) this;
        }

        public Criteria andCreatedDateTimeGreaterThanOrEqualTo(String value) {
            addCriterion("CreatedDateTime >=", value, "createdDateTime");
            return (Criteria) this;
        }

        public Criteria andCreatedDateTimeLessThan(String value) {
            addCriterion("CreatedDateTime <", value, "createdDateTime");
            return (Criteria) this;
        }

        public Criteria andCreatedDateTimeLessThanOrEqualTo(String value) {
            addCriterion("CreatedDateTime <=", value, "createdDateTime");
            return (Criteria) this;
        }

        public Criteria andCreatedDateTimeLike(String value) {
            addCriterion("CreatedDateTime like", value, "createdDateTime");
            return (Criteria) this;
        }

        public Criteria andCreatedDateTimeNotLike(String value) {
            addCriterion("CreatedDateTime not like", value, "createdDateTime");
            return (Criteria) this;
        }

        public Criteria andCreatedDateTimeIn(List<String> values) {
            addCriterion("CreatedDateTime in", values, "createdDateTime");
            return (Criteria) this;
        }

        public Criteria andCreatedDateTimeNotIn(List<String> values) {
            addCriterion("CreatedDateTime not in", values, "createdDateTime");
            return (Criteria) this;
        }

        public Criteria andCreatedDateTimeBetween(String value1, String value2) {
            addCriterion("CreatedDateTime between", value1, value2, "createdDateTime");
            return (Criteria) this;
        }

        public Criteria andCreatedDateTimeNotBetween(String value1, String value2) {
            addCriterion("CreatedDateTime not between", value1, value2, "createdDateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_phoneusinglog
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}